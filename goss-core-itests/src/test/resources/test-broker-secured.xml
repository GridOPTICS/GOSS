<!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor
    license agreements. See the NOTICE file distributed with this work for additional
    information regarding copyright ownership. The ASF licenses this file to
    You under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of
    the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required
    by applicable law or agreed to in writing, software distributed under the
    License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
    OF ANY KIND, either express or implied. See the License for the specific
    language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">


    <broker xmlns="http://activemq.apache.org/schema/core"
        brokerName="test-security-broker" start="false" useJmx="true"
        persistent="false">

        <destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry topic=">">
                        <pendingMessageLimitStrategy>
                            <constantPendingMessageLimitStrategy
                                limit="1000" />
                        </pendingMessageLimitStrategy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>

        <managementContext>
            <managementContext jmxDomainName="goss.domain.secured"
                connectorPort="1099" />
        </managementContext>

        <systemUsage>
            <systemUsage>
                <memoryUsage>
                    <memoryUsage percentOfJvmHeap="70" />
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit="100 gb" />
                </storeUsage>
                <tempUsage>
                    <tempUsage limit="50 gb" />
                </tempUsage>
            </systemUsage>
        </systemUsage>

        <transportConnectors>
            <!-- DOS protection, limit concurrent connections to 1000 and frame size
                to 100MB -->
            <transportConnector name="openwire"
                uri="tcp://0.0.0.0:51515?wireFormat.maxInactivityDuration=0;maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600" />
            <transportConnector name="stomp"
                uri="stomp://0.0.0.0:51516?wireFormat.maxInactivityDuration=0;maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600" />
            <transportConnector name="ws"
                uri="ws://0.0.0.0:51517?wireFormat.maxInactivityDuration=0;maximumConnections=1000&amp;wireFormat.maxFrameSize=104857600" />
        </transportConnectors>

        <!---->
        <plugins>

            <simpleAuthenticationPlugin>
                <users>
                    <authenticationUser username="test_user"
                        password="test_pass" groups="users,admins" />
                    <authenticationUser username="system" password="manager"
                        groups="users,admins" />
                    <authenticationUser username="user" password="password"
                        groups="users" />
                    <authenticationUser username="guest" password="password"
                        groups="guests" />
                    <authenticationUser username="goss" password="goss"
                        groups="users" />
                </users>
            </simpleAuthenticationPlugin>
            <!-- lets configure a destination based authorization mechanism -->
            <authorizationPlugin>
                <map>
                    <authorizationMap>
                        <authorizationEntries>
                            <authorizationEntry queue=">" read="admins"
                                write="admins" admin="admins" />
                            <authorizationEntry queue="USERS.>" read="users"
                                write="users" admin="users" />
                            <authorizationEntry queue="GUEST.>" read="guests"
                                write="guests,users" admin="guests,users" />

                            <authorizationEntry topic=">" read="admins"
                                write="admins" admin="admins" />
                            <authorizationEntry topic="USERS.>" read="users"
                                write="users" admin="users" />
                            <authorizationEntry topic="GUEST.>" read="guests"
                                write="guests,users" admin="guests,users" />

                            <authorizationEntry topic="ActiveMQ.Advisory.>"
                                read="guests,users" write="guests,users" admin="guests,users" />
                        </authorizationEntries>

                        <!-- let's assign roles to temporary destinations. comment this entry
                            if we don't want any roles assigned to temp destinations -->
                        <!-- <tempDestinationAuthorizationEntry>
                            <tempDestinationAuthorizationEntry
                                read="admins,users" write="admins,users"
                                admin="admins,users" />
                        </tempDestinationAuthorizationEntry> -->
                    </authorizationMap>
                </map>
            </authorizationPlugin>
            <!-- <authorizationPlugin> <map> <authorizationMap> <authorizationEntries>
                <authorizationEntry queue=">" write="producers" read="consumers" admin="admins"
                /> </authorizationEntries> </authorizationMap> </map> </authorizationPlugin> -->


            <bean xmlns="http://www.springframework.org/schema/beans" id="gossSecurityBroker"
                class="pnnl.goss.security.broker.GossSecurityBroker"></bean>

        </plugins>

        <!--<messageAuthorizationPolicy> <bean class="pnnl.goss.security.core.activemq.GossAuthPolicy"
            xmlns="http://www.springframework.org/schema/beans"/> </messageAuthorizationPolicy> -->
    </broker>

</beans>